
1. Метрики продукта и направления потребителей контента
1) Ключевые метрики:
- Общее количество просмотров контента: измеряет активность пользователей, помогает оценить популярность разных типов контента.
- DAU/MAU (активные пользователи): отображает ежедневную и месячную активность пользователей, полезно для отслеживания вовлеченности.
- Частота подписки на авторов/продакшн: показывает, насколько привлекателен контент для аудитории, особенно важна для эксклюзивного контента.
- Retention rate: демонстрирует, сколько пользователей возвращаются для просмотра контента через определенные промежутки времени (1, 7, 30 дней).
- ARPU (средняя выручка на пользователя): важна для оценки монетизации и оценки окупаемости инвестиций в контент.
2) Вторичные метрики:
- Среднее время просмотра видео: показывает вовлеченность пользователей на уровне каждого типа контента.
- Конверсия в подписку: определяет процент пользователей, которые подписались после первого просмотра или взаимодействия с чатом.
- Частота взаимодействия с контентом (лайки, комментарии, шеры): отражает степень взаимодействия с контентом.
- Средний чек и количество покупок за подписку: полезны для оценки моделей монетизации.
- Типы контента с наибольшим спросом (категории, типы контента): помогает понять, какие категории и типы контента более популярны.

2. Причины выбора метрик
- DAU/MAU необходимы для отслеживания роста аудитории и вовлеченности. Это ключевые метрики для любого сервиса, основанного на контенте.
- Retention rate важен для оценки лояльности и того, насколько интересен контент пользователям.
- Конверсия в подписку отражает эффективность привлечения новых подписчиков.
- ARPU и средний чек позволяют оценить, как монетизируется контент и какой вклад каждый пользователь приносит в доходы.
- Частота взаимодействия с контентом нужна для оценки социальной активности, что косвенно влияет на удержание пользователей.

3. Логика сборки метрик
1) Пример расчета DAU/MAU:
Данные: количество активных пользователей за день/месяц.
Формула: DAU = количество уникальных пользователей, зашедших на платформу за день. MAU = количество уникальных пользователей за месяц. DAU/MAU Ratio = DAU / MAU — показатель вовлеченности.
Пример расчета Retention rate:
2) Данные: дата первого и повторных визитов пользователя.
Формула: Retention rate = (Количество пользователей, вернувшихся на X день / Количество пользователей, зарегистрировавшихся X дней назад) * 100%.
Пример расчета ARPU:
3) Данные: доходы от подписок за месяц и количество пользователей.
Формула: ARPU = Общий доход за месяц / Количество пользователей.

4. Сбор данных и архитектура
Для построения метрик понадобятся события:
- Просмотр контента (тип контента, категория, длительность просмотра).
- Взаимодействие с контентом (лайк, комментарий, подписка).
- Подписка на автора/продакшн (время подписки, отмена подписки).
-  Монетизация (покупки, суммы).
Эти события можно хранить в дата-сторе, например, в виде JSON-структур, с последующей агрегацией в дата-воркхаусе (например, Google BigQuery или AWS Redshift) для создания отчетов и анализа.

import pandas as pd
import matplotlib.pyplot as plt

# 1. Загрузка данных
file_path = 'transactions_feb_2020.csv'
data = pd.read_csv(file_path)

# 2. Предварительный анализ
print(data.info())
print(data.describe())
print(data.isnull().sum())  # Пропуски в данных
print(data.duplicated().sum())  # Дубликаты

# 3. Анализ данных
# Общее количество транзакций
total_transactions = len(data)

# Общая сумма транзакций
total_amount = data['amount'].sum()

# Средний чек
average_check = data['amount'].mean()

# Транзакции по дням
data['date'] = pd.to_datetime(data['date'])
daily_transactions = data.groupby(data['date'].dt.date)['amount'].sum()

# Пиковые дни
peak_days = daily_transactions.sort_values(ascending=False).head(5)

# Распределение транзакций по клиентам
client_transactions = data['client_id'].value_counts()

# 4. Визуализация данных
plt.figure(figsize=(10, 6))
daily_transactions.plot(kind='bar', color='skyblue')
plt.title('Динамика транзакций по дням')
plt.xlabel('Дата')
plt.ylabel('Сумма транзакций')
plt.show()

plt.figure(figsize=(8, 5))
client_transactions.plot(kind='hist', bins=20, color='orange')
plt.title('Распределение транзакций по клиентам')
plt.xlabel('Количество транзакций')
plt.ylabel('Частота')
plt.show()

# 5. Выводы
print(f"Общее количество транзакций: {total_transactions}")
print(f"Общая сумма транзакций: {total_amount}")
print(f"Средний чек: {average_check}")
print(f"Пиковые дни по транзакциям:\n{peak_days}")

  
